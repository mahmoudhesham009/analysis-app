@Override
    public TasksHistory getProcessTimeline(String proInstId) {
        HistoricTasksResPojo runningHistory = null;
        try {
            runningHistory = httpService.postReq("/enterprise/historic-tasks/query",
                    new HistoricTasksReqPojo(proInstId, "created-asc", false), HistoricTasksResPojo.class);
        } catch (URISyntaxException e) {
            throw new RuntimeException(e);
        }
        List<TaskTimeLine> timeLineRunning = runningHistory.getData().stream().map(m -> new TaskTimeLine(m, "running"))
                .collect(Collectors.toList());

        HistoricTasksResPojo completedHistory = null;
        try {
            completedHistory = httpService.postReq("/enterprise/historic-tasks/query",
                    new HistoricTasksReqPojo(proInstId, "created-asc", true), HistoricTasksResPojo.class);
        } catch (URISyntaxException e) {
            throw new RuntimeException(e);
        }
        List<TaskTimeLine> timeLineCompleted = completedHistory.getData().stream()
                .map(m -> new TaskTimeLine(m, "completed")).collect(Collectors.toList());

        List<TaskTimeLine> timeLine = new ArrayList<>();
        timeLine.addAll(timeLineCompleted);
        timeLine.addAll(timeLineRunning);

        return new TasksHistory(timeLine);
    }



<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>







package com.spirawn.assertiv.pojo;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.Date;
import java.util.List;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class ProcessInstanceData {
    private String id;
    private String name;
    private String businessKey;
    private String processDefinitionId;
    private String tenantId;
    private Date started;
    private Date ended;
    private User startedBy;
    private String processDefinitionName;
    private String processDefinitionDescription;
    private String processDefinitionKey;
    private String processDefinitionCategory;
    private Integer processDefinitionVersion;
    private String processDefinitionDeploymentId;
    private Boolean graphicalNotationDefined;
    private Boolean startFormDefined;
    private Boolean suspended;
    private List<Variable> variables;
}





ProcessInstanceData resultFromAPI = httpService.getReq("/enterprise/process-instances/" + proInstId,
                    ProcessInstanceData.class);